import telebot
import db_handler
import re
import requests
import random
import datetime
import logging
from datetime import datetime
import random
from dotenv import load_dotenv
import os
import json

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ API-–∫–ª—é—á–∏
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '8133560465:AAGDwkX86Pegjmd6WZqBwg6-5qjfaC9gsgY')
EXCHANGE_API_KEY = os.getenv('EXCHANGE_API_KEY', '6e48c92c9426cd2dfd7d0d0e')
OPENWEATHER_API_KEY = os.getenv('OPENWEATHER_API_KEY', '81f986beb7a5b44cb6ff318dc9d06af9')
bot = telebot.TeleBot(TOKEN)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ò–ò API
AI_API_URL = "https://api.intelligence.io.solutions/api/v1/chat/completions"
AI_API_HEADERS = {
    "Content-Type": "application/json",
    "Authorization": "Bearer io-v2-eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvd25lciI6IjMyOWYyYjFlLWZkZGEtNGY4NC1iYzI2LTIxNjc3OGU5MzVkZiIsImV4cCI6NDkwNDYxMjY5Mn0.ibI8tb4tC9nUOEoaEA63tkkvYWExAf6Q94xPVY7Ob19ue1DD56XXSpXMjWkAg1nO0MhBLxbb9LQwNumyU2vnQA"
}

# –°–ø–∏—Å–æ–∫ —Å–æ–≤–µ—Ç–æ–≤ –¥–Ω—è
tips = {
    "üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¢–û": [
        {"text": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤ —à–∏–Ω–∞—Ö –ø–µ—Ä–µ–¥ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–æ–º ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ —É–ª—É—á—à–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.", "details": "–î–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è (—É–∫–∞–∑–∞–Ω–æ –Ω–∞ –¥–≤–µ—Ä–∏ –≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –≤ –º–∞–Ω—É–∞–ª–µ). –ù–∞ —Å—Ç–∞–Ω—Ü–∏—è—Ö –¢–û –≤ –ë–µ–ª–∞—Ä—É—Å–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —à–∏–Ω—ã –Ω–∞ –∏–∑–Ω–æ—Å –∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://gto.by"},
        {"text": "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–ø—Ç–µ—á–∫–∞, –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å –∏ –∑–Ω–∞–∫ –∞–≤–∞—Ä–∏–π–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –Ω–∞–ª–∏—á–∏–∏ –∏ –Ω–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω—ã.", "details": "–°–æ–≥–ª–∞—Å–Ω–æ –ü–î–î –†–ë, —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã. –ê–ø—Ç–µ—á–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω–∞, –∞ –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å ‚Äî –∑–∞–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å –¥–µ–π—Å—Ç–≤—É—é—â–∏–º —Å—Ä–æ–∫–æ–º –≥–æ–¥–Ω–æ—Å—Ç–∏."},
        {"text": "–ü—Ä–æ—Ç—Ä–∏—Ç–µ —Ñ–∞—Ä—ã –∏ —Å—Ç–µ–∫–ª–∞ –¥–ª—è –ª—É—á—à–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –¢–û.", "details": "–ì—Ä—è–∑–Ω—ã–µ —Ñ–∞—Ä—ã –º–æ–≥—É—Ç —Å–Ω–∏–∑–∏—Ç—å —Å–≤–µ—Ç–æ–≤–æ–π –ø–æ—Ç–æ–∫, —á—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –æ—Ç–∫–∞–∑—É –≤ –¢–û. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—á–∏—â–∞—é—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —Å—Ç–µ–∫–æ–ª –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫—É —Ñ–∞—Ä."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –ª–∞–º–ø–æ—á–∫–∏ –≤ —Ñ–∞—Ä–∞—Ö, —Å—Ç–æ–ø-—Å–∏–≥–Ω–∞–ª–∞—Ö –∏ –ø–æ–≤–æ—Ä–æ—Ç–Ω–∏–∫–∞—Ö.", "details": "–ù–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–µ –ª–∞–º–ø–æ—á–∫–∏ ‚Äî —á–∞—Å—Ç–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞ –Ω–∞ –¢–û. –ó–∞–º–µ–Ω–∏—Ç–µ –∏—Ö –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∑–∏—Ç–∞."},
        {"text": "–û—á–∏—Å—Ç–∏—Ç–µ –Ω–æ–º–µ—Ä–Ω—ã–µ –∑–Ω–∞–∫–∏ –æ—Ç –≥—Ä—è–∑–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏ —á–∏—Ç–∞–µ–º—ã.", "details": "–ì—Ä—è–∑–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç–∫–∞–∑–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä–∞ —á–µ—Ç–∫–æ –≤–∏–¥–Ω—ã –∏ –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å—Ç–µ–∫–ª–æ–æ—á–∏—Å—Ç–∏—Ç–µ–ª–µ–π –∏ –Ω–∞–ª–∏—á–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏ –≤ –±–∞—á–∫–µ –æ–º—ã–≤–∞—Ç–µ–ª—è.", "details": "–ù–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–µ –¥–≤–æ—Ä–Ω–∏–∫–∏ –∏–ª–∏ –ø—É—Å—Ç–æ–π –±–∞—á–æ–∫ –æ–º—ã–≤–∞—Ç–µ–ª—è –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—Ç–∫–∞–∑—É –Ω–∞ –¢–û. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–∑–∞–º–µ—Ä–∑–∞—é—â—É—é –∂–∏–¥–∫–æ—Å—Ç—å –≤ —Ö–æ–ª–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞."},
        {"text": "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–µ–º–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.", "details": "–ù–∞ –¢–û –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ä–µ–º–Ω–∏ –Ω–∞ –∏–∑–Ω–æ—Å –∏ –∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –∑–∞–º–∫–æ–≤. –ó–∞–º–µ–Ω–∏—Ç–µ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–µ —Ä–µ–º–Ω–∏ –∑–∞—Ä–∞–Ω–µ–µ."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ç–æ—Ä–º–æ–∑–Ω–æ–π –∂–∏–¥–∫–æ—Å—Ç–∏.", "details": "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∏–ª–∏ –∑–∞–≥—Ä—è–∑–Ω—ë–Ω–Ω–∞—è —Ç–æ—Ä–º–æ–∑–Ω–∞—è –∂–∏–¥–∫–æ—Å—Ç—å –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Ç–æ—Ä–º–æ–∑–æ–≤, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ –¢–û."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã—Ö–ª–æ–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.", "details": "–î—ã—Ä—ã –∏–ª–∏ —á—Ä–µ–∑–º–µ—Ä–Ω—ã–π —à—É–º –≤ –≤—ã—Ö–ª–æ–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—Ç–∫–∞–∑—É –Ω–∞ –¢–û. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–ª—É—à–∏—Ç–µ–ª—å –∏ —Ç—Ä—É–±—ã –Ω–∞ –∫–æ—Ä—Ä–æ–∑–∏—é."},
        {"text": "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä—É—á–Ω–æ–π —Ç–æ—Ä–º–æ–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.", "details": "–ù–∞ –¢–û –ø—Ä–æ–≤–µ—Ä—è—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ —Ç–æ—Ä–º–æ–∑–∞. –ï—Å–ª–∏ –æ–Ω —Å–ª–∞–±—ã–π, –æ—Ç—Ä–µ–≥—É–ª–∏—Ä—É–π—Ç–µ –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç–µ —Ç—Ä–æ—Å."}
    ],
    "üöó –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ": [
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å –º–∞—Å–ª–∞ –≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ –∫–∞–∂–¥—ã–µ 1‚Äì2 –º–µ—Å—è—Ü–∞.", "details": "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –º–∞—Å–ª–∞ –º–æ–∂–µ—Ç –ø–æ–≤—Ä–µ–¥–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∞—Å–ª–æ, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º, –∏ –º–µ–Ω—è–π—Ç–µ –µ–≥–æ –∫–∞–∂–¥—ã–µ 10‚Äì15 —Ç—ã—Å. –∫–º."},
        {"text": "–ó–∞–º–µ–Ω—è–π—Ç–µ –≤–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –∫–∞–∂–¥—ã–µ 15‚Äì20 —Ç—ã—Å. –∫–º –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–ø–ª–∏–≤–∞.", "details": "–ó–∞—Å–æ—Ä–µ–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä —Å–Ω–∏–∂–∞–µ—Ç –º–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä –ø—Ä–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–º –¢–û."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ –Ω–∞ –∏–∑–Ω–æ—Å –∫–∞–∂–¥—ã–µ 20 —Ç—ã—Å. –∫–º.", "details": "–ò–∑–Ω–æ—à–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —Ç–æ—Ä–º–æ–∑–Ω–æ–π –ø—É—Ç—å. –ù–∞ –¢–û –≤ –ë–µ–ª–∞—Ä—É—Å–∏ —Ç–æ—Ä–º–æ–∑–∞ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –Ω–∞ —Å—Ç–µ–Ω–¥–µ, —Ç–∞–∫ —á—Ç–æ –∑–∞–º–µ–Ω–∏—Ç–µ –∏—Ö –∑–∞—Ä–∞–Ω–µ–µ."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ.", "details": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –∞–Ω—Ç–∏—Ñ—Ä–∏–∑–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–µ—Ä–µ–≥—Ä–µ–≤—É –¥–≤–∏–≥–∞—Ç–µ–ª—è. –î–æ–ª–∏–≤–∞–π—Ç–µ –∂–∏–¥–∫–æ—Å—Ç—å, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–æ—Ä–Ω–∏–∫–æ–≤ ‚Äî –∏–∑–Ω–æ—à–µ–Ω–Ω—ã–µ —â–µ—Ç–∫–∏ —É—Ö—É–¥—à–∞—é—Ç –æ–±–∑–æ—Ä.", "details": "–ó–∞–º–µ–Ω–∏—Ç–µ —â–µ—Ç–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–≤–ª—è—é—Ç –ø–æ–ª–æ—Å—ã –∏–ª–∏ —Å–∫—Ä–∏–ø—è—Ç. –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –¢–û."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∏–º–æ–π.", "details": "–°–ª–∞–±—ã–π –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –º–æ–∂–µ—Ç –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å –≤ —Ö–æ–ª–æ–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª–µ–º–º—ã –Ω–∞ –∫–æ—Ä—Ä–æ–∑–∏—é –∏ –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏."},
        {"text": "–ú–µ–Ω—è–π—Ç–µ —Å–≤–µ—á–∏ –∑–∞–∂–∏–≥–∞–Ω–∏—è –∫–∞–∂–¥—ã–µ 30‚Äì50 —Ç—ã—Å. –∫–º.", "details": "–ò–∑–Ω–æ—à–µ–Ω–Ω—ã–µ —Å–≤–µ—á–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ –∏ —Å–Ω–∏–∂–∞—é—Ç –º–æ—â–Ω–æ—Å—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–µ—á–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–º–Ω—è –ì–†–ú.", "details": "–û–±—Ä—ã–≤ —Ä–µ–º–Ω—è –ì–†–ú –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–µ—Ä—å—ë–∑–Ω–æ–π –ø–æ–ª–æ–º–∫–µ –¥–≤–∏–≥–∞—Ç–µ–ª—è. –ú–µ–Ω—è–π—Ç–µ —Ä–µ–º–µ–Ω—å —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É (–æ–±—ã—á–Ω–æ –∫–∞–∂–¥—ã–µ 60‚Äì100 —Ç—ã—Å. –∫–º)."},
        {"text": "–û—á–∏—â–∞–π—Ç–µ —Ä–∞–¥–∏–∞—Ç–æ—Ä –æ—Ç –≥—Ä—è–∑–∏ –∏ –Ω–∞—Å–µ–∫–æ–º—ã—Ö.", "details": "–ó–∞—Å–æ—Ä—ë–Ω–Ω—ã–π —Ä–∞–¥–∏–∞—Ç–æ—Ä —É—Ö—É–¥—à–∞–µ—Ç –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –¥–≤–∏–≥–∞—Ç–µ–ª—è, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–µ—Ä–µ–≥—Ä–µ–≤—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∂–∞—Ç—ã–π –≤–æ–∑–¥—É—Ö –∏–ª–∏ –º—è–≥–∫—É—é —â—ë—Ç–∫—É."},
        {"text": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–≤–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 20 —Ç—ã—Å. –∫–º.", "details": "–ò–∑–Ω–æ—à–µ–Ω–Ω—ã–µ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã –∏–ª–∏ —à–∞—Ä–æ–≤—ã–µ –æ–ø–æ—Ä—ã —Å–Ω–∏–∂–∞—é—Ç —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ –°–¢–û –ø–µ—Ä–µ–¥ –¢–û."}
    ],
    "üìú –ü—Ä–∞–≤–∏–ª–∞ –†–ë": [
        {"text": "–¢–µ—Ö–æ—Å–º–æ—Ç—Ä –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω —Ä–∞–∑ –≤ –≥–æ–¥ –¥–ª—è –∞–≤—Ç–æ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç.", "details": "–°–æ–≥–ª–∞—Å–Ω–æ –£–∫–∞–∑—É ‚Ññ349, –ª–µ–≥–∫–æ–≤—ã–µ –∞–≤—Ç–æ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç –ø—Ä–æ—Ö–æ–¥—è—Ç –¢–û –µ–∂–µ–≥–æ–¥–Ω–æ, –¥–æ 10 –ª–µ—Ç ‚Äî —Ä–∞–∑ –≤ 2 –≥–æ–¥–∞. –®—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É ‚Äî –¥–æ 120 BYN –≤ 2025."},
        {"text": "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –û–°–ì–û –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø–µ—Ä–µ–¥ –¢–û.", "details": "–ë–µ–∑ –¥–µ–π—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –¢–û –Ω–µ –ø—Ä–æ–π—Ç–∏. –û—Ñ–æ—Ä–º–∏—Ç–µ –û–°–ì–û —á–µ—Ä–µ–∑ –ë–µ–ª–≥–æ—Å—Å—Ç—Ä–∞—Ö –∏–ª–∏ –æ–Ω–ª–∞–π–Ω –Ω–∞ –∏—Ö —Å–∞–π—Ç–µ: https://bgs.by"},
        {"text": "–®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤ –∏–µ –¢–û ‚Äî –¥–æ 3 –±–∞–∑–æ–≤—ã—Ö –≤–µ–ª–∏—á–∏–Ω.", "details": "–í 2025 –≥–æ–¥—É —ç—Ç–æ –¥–æ 120 BYN. –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –Ω–∞—Ä—É—à–µ–Ω–∏–∏ —à—Ç—Ä–∞—Ñ –≤—ã—à–µ –∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ –ª–∏—à–µ–Ω–∏–µ –ø—Ä–∞–≤. –ü—Ä–æ–π–¥–∏—Ç–µ –¢–û –≤–æ–≤—Ä–µ–º—è!"},
        {"text": "–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –¢–û –¥–ª—è —Ç–∞–∫—Å–∏ ‚Äî –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤.", "details": "–°–æ–≥–ª–∞—Å–Ω–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –†–ë, –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤, –ø—Ä–æ—Ö–æ–¥—è—Ç –¢–û –¥–≤–∞–∂–¥—ã –≤ –≥–æ–¥."},
        {"text": "–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –¢–û: –ø–∞—Å–ø–æ—Ä—Ç, —Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞.", "details": "–¢–∞–∫–∂–µ –Ω—É–∂–Ω–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ –≥–æ—Å–ø–æ—à–ª–∏–Ω—ã. –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ï–†–ò–ü –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ https://gto.by/pay/?step=1."},
        {"text": "–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ç–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ª–æ–±–æ–≤–æ–µ —Å—Ç–µ–∫–ª–æ –∏ –ø–µ—Ä–µ–¥–Ω–∏–µ –±–æ–∫–æ–≤—ã–µ —Å—Ç—ë–∫–ª–∞.", "details": "–°–æ–≥–ª–∞—Å–Ω–æ –ü–î–î –†–ë, —Å–≤–µ—Ç–æ–ø—Ä–æ–ø—É—Å–∫–∞–Ω–∏–µ —ç—Ç–∏—Ö —Å—Ç—ë–∫–æ–ª –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 70%. –ù–∞—Ä—É—à–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—Ç–∫–∞–∑—É –Ω–∞ –¢–û."},
        {"text": "–î–µ—Ç—Å–∫–æ–µ –∫—Ä–µ—Å–ª–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –¥–µ—Ç–µ–π –¥–æ 12 –ª–µ—Ç –∏–ª–∏ —Ä–æ—Å—Ç–∞ –¥–æ 150 —Å–º.", "details": "–®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫—Ä–µ—Å–ª–∞ ‚Äî –¥–æ 4 –±–∞–∑–æ–≤—ã—Ö –≤–µ–ª–∏—á–∏–Ω (160 BYN –≤ 2025). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫—Ä–µ—Å–ª–∞ –ø–µ—Ä–µ–¥ –¢–û."},
        {"text": "–ó–∏–º–Ω–∏–µ —à–∏–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã —Å 1 –¥–µ–∫–∞–±—Ä—è –ø–æ 1 –º–∞—Ä—Ç–∞.", "details": "–®—Ç—Ä–∞—Ñ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚Äî –¥–æ 1 –±–∞–∑–æ–≤–æ–π –≤–µ–ª–∏—á–∏–Ω—ã (40 BYN –≤ 2025). –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —à–∏–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–µ—Ä–µ–¥ –¢–û."},
        {"text": "–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –≥—Ä—É–∑–æ–≤ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ—Ä–º–∞–º.", "details": "–ì—Ä—É–∑ –Ω–µ –¥–æ–ª–∂–µ–Ω –≤—ã—Å—Ç—É–ø–∞—Ç—å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 1 –º —Å–∑–∞–¥–∏ –∏–ª–∏ 0,4 –º –ø–æ –±–æ–∫–∞–º –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ –¢–û."},
        {"text": "–ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–º–∏ —Ç–æ—Ä–º–æ–∑–∞–º–∏ –∏–ª–∏ —Ä—É–ª–µ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.", "details": "–¢–∞–∫–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –≤—ã—è–≤–ª—è—é—Ç—Å—è –Ω–∞ –¢–û, –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è –∞–≤—Ç–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –¥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—Ä–∞–Ω–µ–µ."}
    ]
}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–≤–µ—Ç–∞
tip_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
tip_menu.row("üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¢–û", "üöó –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ")
tip_menu.row("üìú –ü—Ä–∞–≤–∏–ª–∞ –†–ë")
tip_menu.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# –ú–µ–Ω—é –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ç–∞
tip_followup_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
tip_followup_menu.row("‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ", "‚û°Ô∏è –ù–æ–≤—ã–π —Å–æ–≤–µ—Ç")
tip_followup_menu.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–≤–µ—Ç–∞ –¥–Ω—è
@bot.message_handler(func=lambda msg: msg.text == "üí° –°–æ–≤–µ—Ç –¥–Ω—è")
def send_tip(msg):
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(
        msg.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–æ–≤–µ—Ç–∞:",
        reply_markup=tip_menu
    )
    user_states[msg.chat.id] = {'state': 'awaiting_tip_category'}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–≤–µ—Ç–∞
@bot.message_handler(func=lambda msg: user_states.get(msg.chat.id, {}).get('state') == 'awaiting_tip_category')
def handle_tip_category(msg):
    db_handler.add_active_user(msg.chat.id)
    chat_id = msg.chat.id
    category = msg.text
    if category in tips and tips[category]:
        tip = random.choice(tips[category])
        logging.info(f"–í—ã–±—Ä–∞–Ω —Å–æ–≤–µ—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}: {tip['text']}")
        bot.send_message(
            chat_id,
            f"{tip['text']}\n\n‚ÑπÔ∏è –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–æ–≤–µ—Ç?",
            reply_markup=tip_followup_menu
        )
        user_states[chat_id] = {'tip': tip, 'category': category}
    elif msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.send_message(
            chat_id,
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=main_menu
        )
        user_states.pop(chat_id, None)
    else:
        bot.send_message(
            chat_id,
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.",
            reply_markup=tip_menu
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ç–∞
@bot.message_handler(func=lambda msg: msg.text in ["‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ", "‚û°Ô∏è –ù–æ–≤—ã–π —Å–æ–≤–µ—Ç", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
def handle_tip_followup(msg):
    db_handler.add_active_user(msg.chat.id)
    chat_id = msg.chat.id
    if msg.text == "‚û°Ô∏è –ù–æ–≤—ã–π —Å–æ–≤–µ—Ç":
        if chat_id in user_states and 'category' in user_states[chat_id]:
            category = user_states[chat_id]['category']
            if tips[category]:
                tip = random.choice(tips[category])
                logging.info(f"–í—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π —Å–æ–≤–µ—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}: {tip['text']}")
                bot.send_message(
                    chat_id,
                    f"{tip['text']}\n\n‚ÑπÔ∏è –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–æ–≤–µ—Ç?",
                    reply_markup=tip_followup_menu
                )
                user_states[chat_id] = {'tip': tip, 'category': category}
            else:
                bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è –°–æ–≤–µ—Ç—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.",
                    reply_markup=tip_menu
                )
                user_states[chat_id] = {'state': 'awaiting_tip_category'}
        else:
            bot.send_message(
                chat_id,
                "‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–æ–≤–µ—Ç–∞.",
                reply_markup=tip_menu
            )
            user_states[chat_id] = {'state': 'awaiting_tip_category'}
    elif msg.text == "‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ":
        if chat_id in user_states and 'tip' in user_states[chat_id]:
            tip = user_states[chat_id]['tip']
            bot.send_message(
                chat_id,
                f"{tip['text']}\n\nüìã <b>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:</b>\n{tip['details']}",
                parse_mode="HTML",
                reply_markup=tip_followup_menu,
                disable_web_page_preview=True
            )
        else:
            bot.send_message(
                chat_id,
                "‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–≤–µ—Ç–µ —É—Å—Ç–∞—Ä–µ–ª–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–æ–≤–µ—Ç–∞.",
                reply_markup=tip_menu
            )
            user_states[chat_id] = {'state': 'awaiting_tip_category'}
    elif msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.send_message(
            chat_id,
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=main_menu
        )
        user_states.pop(chat_id, None)

user_states = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row("üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä", "üì∞ –ù–æ–≤–æ—Å—Ç–∏")
main_menu.row("üí¨ FAQ", "‚òÅÔ∏è –ü–æ–≥–æ–¥–∞")
main_menu.row("üõ†Ô∏è –£—Å–ª—É–≥–∏", "üìÑ –û —Å—Ç—Ä–∞—Ö–æ–≤–∫–µ")
main_menu.row("‚ú® –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", "‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏")
main_menu.row("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò")
main_menu.row("üí° –°–æ–≤–µ—Ç –¥–Ω—è", "üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç")

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ä–µ–º–æ–Ω—Ç–∞
repair_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
repair_menu.row("–ó–∞–º–µ–Ω–∞ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –∫–æ–ª–æ–¥–æ–∫", "–ó–∞–º–µ–Ω–∞ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤")
repair_menu.row("–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞", "–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª—è–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞")
repair_menu.row("–†–µ–º–æ–Ω—Ç —Å—Ç–∞—Ä—Ç–µ—Ä–∞", "–ó–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä—Ç–µ—Ä–∞")
repair_menu.row("–ó–∞–º–µ–Ω–∞ —Å–≤–µ—á–µ–π –∑–∞–∂–∏–≥–∞–Ω–∏—è", "–†–µ–º–æ–Ω—Ç –ø–æ–¥–≤–µ—Å–∫–∏")
repair_menu.row("–ó–∞–º–µ–Ω–∞ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–æ–≤", "–ó–∞–º–µ–Ω–∞ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞")
repair_menu.row("–†–µ–º–æ–Ω—Ç —Ä—É–ª–µ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–ó–∞–º–µ–Ω–∞ —Ä—É–ª–µ–≤—ã—Ö —Ç—è–≥")
repair_menu.row("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "–ó–∞–º–µ–Ω–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞")
repair_menu.row("–†–µ–º–æ–Ω—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "–ó–∞–º–µ–Ω–∞ —Ä–µ–º–Ω—è –ì–†–ú")
repair_menu.row("–†–µ–º–æ–Ω—Ç –≤—ã—Ö–ª–æ–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã", "–ó–∞–º–µ–Ω–∞ –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏")
repair_menu.row("–†–µ–º–æ–Ω—Ç —Ä–∞–¥–∏–∞—Ç–æ—Ä–∞", "–ó–∞–º–µ–Ω–∞ —Å—Ç–µ–∫–ª–æ–æ—á–∏—Å—Ç–∏—Ç–µ–ª–µ–π")
repair_menu.row("–†–µ–º–æ–Ω—Ç –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á", "–ó–∞–º–µ–Ω–∞ —Å—Ü–µ–ø–ª–µ–Ω–∏—è")
repair_menu.row("–†–µ–º–æ–Ω—Ç —Ç–æ—Ä–º–æ–∑–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã", "–ó–∞–º–µ–Ω–∞ –≥–ª—É—à–∏—Ç–µ–ª—è")
repair_menu.row("–†–µ–º–æ–Ω—Ç —ç–ª–µ–∫—Ç—Ä–∏–∫–∏", "–î—Ä—É–≥–æ–µ")
repair_menu.row("‚ùå –û—Ç–º–µ–Ω–∞")

# –ú–µ–Ω—é –Ω–æ–≤–æ—Å—Ç–µ–π
news_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
news_menu.row("üì∞ –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏", "üìÖ –ù–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥")
news_menu.row("üîç –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# –ú–µ–Ω—é FAQ
faq_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
faq_menu.row("üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –¢–û", "‚ùì –¢–û –±–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏")
faq_menu.row("‚ö†Ô∏è –®—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É", "üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û")
faq_menu.row("üìÜ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –¢–û", "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å")
faq_menu.row("üö´ –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–µ–ª –¢–û", "üßæ –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞")
faq_menu.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# –ú–µ–Ω—é –æ—Ç–∑—ã–≤–æ–≤
feedback_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
feedback_menu.row("‚≠ê", "‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê")
feedback_menu.row("‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –æ—Ü–µ–Ω–∫–∏", "‚ùå –û—Ç–º–µ–Ω–∞")

# –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
cancel_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
cancel_menu.row("‚ùå –û—Ç–º–µ–Ω–∞")

# –ú–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
city_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
city_menu.row("–ú–∏–Ω—Å–∫", "–ì–æ–º–µ–ª—å", "–ë—Ä–µ—Å—Ç")
city_menu.row("–í–∏—Ç–µ–±—Å–∫", "–ì—Ä–æ–¥–Ω–æ", "–ú–æ–≥–∏–ª—ë–≤")
city_menu.row("–ë–æ–±—Ä—É–π—Å–∫", "–ü–∏–Ω—Å–∫", "–û—Ä—à–∞")
city_menu.row("–ú–æ–∑—ã—Ä—å", "–°–æ–ª–∏–≥–æ—Ä—Å–∫", "–ù–æ–≤–æ–ø–æ–ª–æ—Ü–∫")
city_menu.row("‚ùå –û—Ç–º–µ–Ω–∞")

# –ú–µ–Ω—é –¥–ª—è –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
ai_mode_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
ai_mode_menu.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò
def get_ai_response(user_message_text, conversation_history=None):
    lower_user_message = user_message_text.lower().strip()
    greetings = ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–∫–∞–∫ –¥–µ–ª–∞?", "–ø—Ä–∏–≤–µ—Ç!", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!",
                 "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å!", "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "—Ö–∞–π", "—Ö–µ–ª–ª–æ", "hi", "hello"]
    if lower_user_message in greetings:
        return "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"

    try:
        messages = [
            {
                "role": "system",
                "content": (
                    "–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–† (–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–µ–ª–∞—Ä—É—Å—å). –°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞:\n\n"
                    "1. –ö–û–ù–¢–ï–ö–°–¢ –ò –ü–ê–ú–Ø–¢–¨:\n"
                    "- –ó–∞–ø–æ–º–∏–Ω–∞–π –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏\n"
                    "- –£—á–∏—Ç—ã–≤–∞–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö\n"
                    "- –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —É—Ç–æ—á–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π - –æ—Ç–≤–µ—á–∞–π —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n\n"
                    "2. –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–û–í:\n"
                    "- –¢–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã, –±–µ–∑ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ —ç–º–æ—Ü–∏–π\n"
                    "- 1-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 50 —Å–ª–æ–≤)\n"
                    "- –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö - —Ä–∞–∑–±–∏–≤–∞–π –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
                    "3. –¢–ï–ú–ê–¢–ò–ö–ê:\n"
                    "- –¢–æ–ª—å–∫–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏ —É—Å–ª—É–≥–∏ –ë–µ–ª–∞—Ä—É—Å–∏\n"
                    "- –¢–µ—Ö–æ—Å–º–æ—Ç—Ä, –ü–î–î, —à—Ç—Ä–∞—Ñ—ã, –ì–û–°–¢—ã, —Ç–µ—Ö—Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã –†–ë\n"
                    "- –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ –ë–µ–ª–∞—Ä—É—Å–∏: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ –†–ë. –£—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.'\n\n"
                    "4. –¢–û–ß–ù–û–°–¢–¨:\n"
                    "- –ù–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–π –∏ –Ω–µ –¥–æ–¥—É–º—ã–≤–∞–π\n"
                    "- –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω - –≥–æ–≤–æ—Ä–∏: '–¢–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Ç–æ—á–Ω–∏—Ç–µ –≤ –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–† –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É...'\n"
                    "- –î–∞—Ç—ã –∏ —Å—É–º–º—ã —É–∫–∞–∑—ã–≤–∞–π —Ç–æ—á–Ω–æ (–Ω–∞ 2025 –≥–æ–¥)\n\n"
                    "5. –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –°–õ–£–ß–ê–ò:\n"
                    "- –ü—Ä–∏ —É–≥—Ä–æ–∑–∞—Ö –∂–∏–∑–Ω–∏/–∑–¥–æ—Ä–æ–≤—å—é: '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–≤–æ–Ω–∏—Ç–µ 103!'"
                )
            }
        ]

        if conversation_history:
            messages.extend(conversation_history)

        messages.append({
            "role": "user",
            "content": user_message_text
        })

        data = {
            "model": "deepseek-ai/DeepSeek-R1-0528",
            "messages": messages,
            "max_tokens": 500,
            "temperature": 0.3,
            "top_p": 0.9
        }

        response = requests.post(AI_API_URL, headers=AI_API_HEADERS, json=data, timeout=10)
        response.raise_for_status()
        response_data = response.json()

        if not response_data.get('choices'):
            logging.error(f"–û—à–∏–±–∫–∞ API: –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç 'choices'. –û—Ç–≤–µ—Ç: {json.dumps(response_data, ensure_ascii=False)}")
            return "–û—à–∏–±–∫–∞ API: –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

        text = response_data['choices'][0]['message']['content'].strip()
        text = re.sub(r'<think>.*?</think>', '', text, flags=re.DOTALL)
        text = re.sub(r'<[^>]+>', '', text)
        text = text.strip()
        sentences = re.split(r'(?<=[.!?])\s+', text)
        unique_sentences = []
        for sent in sentences:
            if sent not in unique_sentences:
                unique_sentences.append(sent)
        text = ' '.join(unique_sentences[:3])

        stop_phrases = [
            "–µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã",
            "–æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å",
            "—á–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å",
            "—É—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å",
            "–Ω–∞–¥–µ—é—Å—å, —ç—Ç–æ –ø–æ–º–æ–≥–ª–æ",
            "—Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É",
            "–∫–∞–∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫",
            "–≤ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏",
            "—è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–æ–ª—å–∫–æ"
        ]
        for phrase in stop_phrases:
            text = re.sub(phrase, '', text, flags=re.IGNORECASE)

        text = re.sub(r'\s+', ' ', text).strip()
        text = re.sub(r'^[.,;:!?]+', '', text)
        text = re.sub(r'[.,;:!?]+$', '', text)

        if not text:
            logging.warning(f"–ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {user_message_text}")
            return "–ù–µ –º–æ–≥—É –¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–Ω–∞—á–µ."

        return text

    except requests.exceptions.HTTPError as e:
        status_code = e.response.status_code
        error_text = e.response.text if hasattr(e.response, 'text') else '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞'
        logging.error(f"HTTP –æ—à–∏–±–∫–∞ API: {status_code} - {error_text}")
        if status_code == 401:
            return "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
        elif status_code == 429:
            return "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        elif status_code == 400:
            return f"–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API: {error_text}. –£—Ç–æ—á–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞."
        return f"–û—à–∏–±–∫–∞ API ({status_code}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    except requests.exceptions.ConnectionError:
        logging.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: –Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        return "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."

    except requests.exceptions.Timeout:
        logging.error("–¢–∞–π–º-–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ API")
        return "–ó–∞–ø—Ä–æ—Å –∫ API –∑–∞–Ω—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    except requests.exceptions.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: {str(e)}")
        return "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    except Exception as e:
        logging.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ get_ai_response: {str(e)}")
        return "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def check_phone(phone):
    phone = re.sub(r'[^\d+]', '', phone)
    pattern = r'^(\+375|80)(29|25|44|33)(\d{7})$'
    if not re.match(pattern, phone):
        return False, "‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ +375XXYYYYYYY –∏–ª–∏ 80XXYYYYYYY"
    return True, ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
def check_car_model(model):
    if len(model) < 2 or len(model) > 50:
        return False, "‚ùó –ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤"
    if not re.search(r'[a-zA-Z–∞-—è–ê-–Ø—ë–Å]', model):
        return False, "‚ùó –ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±—É–∫–≤—ã"
    if not re.fullmatch(r'^[a-zA-Z–∞-—è–ê-–Ø—ë–Å0-9\s\-]+$', model):
        return False, "‚ùó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã –∏–ª–∏ –¥–µ—Ñ–∏—Å—ã"
    return True, ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞
def check_year(year):
    if not year.isdigit() or len(year) != 4:
        return False, "‚ùó –ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 4 —Ü–∏—Ñ—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2020)"
    year_num = int(year)
    current_year = datetime.now().year
    if not (1900 <= year_num <= current_year + 1):
        return False, f"‚ùó –ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1900 –¥–æ {current_year + 1}"
    return True, ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –∑–∞–ø–∏—Å–∏
def check_booking_date(date_str):
    if not re.match(r'^\d{2}\.\d{2}\.\d{4}$', date_str):
        return False, "‚ùó –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì"
    try:
        selected_date = datetime.strptime(date_str, '%d.%m.%Y').date()
        if selected_date < datetime.now().date():
            return False, "‚ùó –î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º"
        return True, ""
    except ValueError:
        return False, "‚ùó –ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
def check_search_date(date_str):
    try:
        datetime.strptime(date_str, '%d.%m.%Y')
        return True
    except ValueError:
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
@bot.message_handler(commands=['currency'])
@bot.message_handler(func=lambda msg: msg.text == "üí∏ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç")
def get_currency(msg):
    db_handler.add_active_user(msg.chat.id)
    url = f"https://v6.exchangerate-api.com/v6/{EXCHANGE_API_KEY}/latest/BYN"
    try:
        response = requests.get(url, timeout=5)
        response.raise_for_status()
        data = response.json()
        if data['result'] == 'success':
            rates = data['conversion_rates']
            update_time = datetime.fromtimestamp(data['time_last_update_unix']).strftime('%d.%m.%Y %H:%M')
            user_states[msg.chat.id] = {'rates': rates, 'update_time': update_time}

            response_text = (
                "üí∞ <b>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (BYN)</b>\n"
                f"üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {update_time}\n"
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
                "1Ô∏è‚É£ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å—ã\n"
                "2Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É"
            )
            buttons = telebot.types.InlineKeyboardMarkup()
            buttons.add(telebot.types.InlineKeyboardButton("1Ô∏è‚É£ –ö—É—Ä—Å—ã", callback_data="show_rates"))
            buttons.add(telebot.types.InlineKeyboardButton("2Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä", callback_data="convert_currency"))
            bot.send_message(
                msg.chat.id,
                response_text,
                parse_mode="HTML",
                reply_markup=buttons
            )
            logging.info(f"–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {msg.chat.id}")
        else:
            bot.send_message(
                msg.chat.id,
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–∞—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=main_menu
            )
    except requests.exceptions.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç: {e}")
        bot.send_message(
            msg.chat.id,
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: call.data in ["show_rates", "convert_currency", "refresh_currency"])
def handle_currency_actions(call):
    bot.answer_callback_query(call.id)
    chat_id = call.message.chat.id
    if chat_id not in user_states or 'rates' not in user_states[chat_id]:
        bot.send_message(chat_id, "‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö —É—Å—Ç–∞—Ä–µ–ª–∏. –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –∫—É—Ä—Å—ã –∑–∞–Ω–æ–≤–æ.", reply_markup=main_menu)
        return

    rates = user_states[chat_id]['rates']
    update_time = user_states[chat_id]['update_time']

    if call.data == "show_rates":
        currency_list = {
            'USD': 'üá∫üá∏ –î–æ–ª–ª–∞—Ä –°–®–ê',
            'EUR': 'üá™üá∫ –ï–≤—Ä–æ',
            'RUB': 'üá∑üá∫ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
            'PLN': 'üáµüá± –ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π',
            'UAH': 'üá∫üá¶ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞'
        }
        response_text = (
            "üí∞ <b>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (BYN)</b>\n"
            f"üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {update_time}\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        )
        for code, name in currency_list.items():
            rate = rates.get(code, 'N/A')
            if rate != 'N/A':
                response_text += f"{name}: {rate:.2f} {code}\n"
            else:
                response_text += f"{name}: –î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\n"
        response_text += (
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "üåê –ò—Å—Ç–æ—á–Ω–∏–∫: ExchangeRate-API\n"
            "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤!"
        )
        buttons = telebot.types.InlineKeyboardMarkup()
        buttons.add(telebot.types.InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_currency"))
        buttons.add(telebot.types.InlineKeyboardButton("2Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä", callback_data="convert_currency"))
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=call.message.message_id,
            text=response_text,
            parse_mode="HTML",
            reply_markup=buttons
        )
    elif call.data == "convert_currency":
        response_text = (
            "üí± <b>–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç</b>\n"
            f"üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {update_time}\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –≤–∞–ª—é—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, '100 USD –≤ EUR'):"
        )
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=call.message.message_id,
            text=response_text,
            parse_mode="HTML"
        )
        bot.register_next_step_handler(call.message, process_conversion)
    elif call.data == "refresh_currency":
        get_currency(call.message)

def process_conversion(message):
    chat_id = message.chat.id
    if chat_id not in user_states or 'rates' not in user_states[chat_id]:
        bot.send_message(chat_id, "‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö —É—Å—Ç–∞—Ä–µ–ª–∏. –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –∫—É—Ä—Å—ã –∑–∞–Ω–æ–≤–æ.", reply_markup=main_menu)
        return

    rates = user_states[chat_id]['rates']
    try:
        input_text = message.text.strip().lower()
        parts = re.match(r'(\d+\.?\d*)\s*(\w+)\s*–≤\s*(\w+)', input_text)
        if not parts:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, '100 USD –≤ EUR'.")
        amount = float(parts.group(1))
        from_currency = parts.group(2).upper()
        to_currency = parts.group(3).upper()

        if from_currency not in rates or to_currency not in rates:
            raise ValueError("–û–¥–Ω–∞ –∏–∑ –≤–∞–ª—é—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")

        rate_from = rates[from_currency]
        rate_to = rates[to_currency]
        converted_amount = (amount / rate_from) * rate_to

        response_text = (
            f"üí± <b>–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç</b>\n"
            f"{amount} {from_currency} = {converted_amount:.2f} {to_currency}\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üåê –ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {user_states[chat_id]['update_time']}\n"
            "üí° –•–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ?"
        )
        buttons = telebot.types.InlineKeyboardMarkup()
        buttons.add(telebot.types.InlineKeyboardButton("üîÑ –ï—â—ë —Ä–∞–∑", callback_data="convert_currency"))
        buttons.add(telebot.types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="show_rates"))
        bot.send_message(
            chat_id,
            response_text,
            parse_mode="HTML",
            reply_markup=buttons
        )
    except ValueError as e:
        bot.send_message(
            chat_id,
            f"‚ö†Ô∏è {str(e)} –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '100 USD –≤ EUR').",
            reply_markup=main_menu
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        bot.send_message(
            chat_id,
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu
        )

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ –¥–ª—è –ø–æ–≥–æ–¥—ã
region_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
region_menu.row("–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
region_menu.row("–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
region_menu.row("–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ú–æ–≥–∏–ª—ë–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
region_menu.row("‚ùå –û—Ç–º–µ–Ω–∞")

# –ú–µ–Ω—é –≥–æ—Ä–æ–¥–æ–≤ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
minsk_cities = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
minsk_cities.row("–ú–∏–Ω—Å–∫", "–ë–æ—Ä–∏—Å–æ–≤", "–ú–æ–ª–æ–¥–µ—á–Ω–æ", "–ñ–æ–¥–∏–Ω–æ")
minsk_cities.row("–°–ª—É—Ü–∫", "–°–æ–ª–∏–≥–æ—Ä—Å–∫")
minsk_cities.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", "‚ùå –û—Ç–º–µ–Ω–∞")

brest_cities = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
brest_cities.row("–ë—Ä–µ—Å—Ç", "–ë–∞—Ä–∞–Ω–æ–≤–∏—á–∏", "–ü–∏–Ω—Å–∫", "–ö–æ–±—Ä–∏–Ω")
brest_cities.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", "‚ùå –û—Ç–º–µ–Ω–∞")

vitebsk_cities = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
vitebsk_cities.row("–í–∏—Ç–µ–±—Å–∫", "–û—Ä—à–∞", "–ù–æ–≤–æ–ø–æ–ª–æ—Ü–∫", "–ü–æ–ª–æ—Ü–∫")
vitebsk_cities.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", "‚ùå –û—Ç–º–µ–Ω–∞")

gomel_cities = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
gomel_cities.row("–ì–æ–º–µ–ª—å", "–ú–æ–∑—ã—Ä—å", "–ñ–ª–æ–±–∏–Ω", "–†–µ—á–∏—Ü–∞")
gomel_cities.row("–°–≤–µ—Ç–ª–æ–≥–æ—Ä—Å–∫")
gomel_cities.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", "‚ùå –û—Ç–º–µ–Ω–∞")

grodno_cities = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
grodno_cities.row("–ì—Ä–æ–¥–Ω–æ", "–õ–∏–¥–∞", "–°–ª–æ–Ω–∏–º", "–í–æ–ª–∫–æ–≤—ã—Å–∫")
grodno_cities.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", "‚ùå –û—Ç–º–µ–Ω–∞")

mogilev_cities = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
mogilev_cities.row("–ú–æ–≥–∏–ª—ë–≤", "–ë–æ–±—Ä—É–π—Å–∫")
mogilev_cities.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", "‚ùå –û—Ç–º–µ–Ω–∞")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –¥–ª—è API
city_mapping = {
    "–ú–∏–Ω—Å–∫": "Minsk",
    "–ë—Ä–µ—Å—Ç": "Brest",
    "–í–∏—Ç–µ–±—Å–∫": "Vitebsk",
    "–ì–æ–º–µ–ª—å": "Gomel",
    "–ì—Ä–æ–¥–Ω–æ": "Grodno",
    "–ú–æ–≥–∏–ª—ë–≤": "Mogilev",
    "–ë–æ–±—Ä—É–π—Å–∫": "Bobruisk",
    "–ë–∞—Ä–∞–Ω–æ–≤–∏—á–∏": "Baranovichi",
    "–ü–∏–Ω—Å–∫": "Pinsk",
    "–û—Ä—à–∞": "Orsha",
    "–ú–æ–∑—ã—Ä—å": "Mozyr",
    "–°–æ–ª–∏–≥–æ—Ä—Å–∫": "Soligorsk",
    "–ù–æ–≤–æ–ø–æ–ª–æ—Ü–∫": "Novopolotsk",
    "–õ–∏–¥–∞": "Lida",
    "–ñ–ª–æ–±–∏–Ω": "Zhlobin",
    "–°–ª—É—Ü–∫": "Slutsk",
    "–†–µ—á–∏—Ü–∞": "Rechitsa",
    "–°–≤–µ—Ç–ª–æ–≥–æ—Ä—Å–∫": "Svetlogorsk",
    "–ö–æ–±—Ä–∏–Ω": "Kobrin",
    "–ë–æ—Ä–∏—Å–æ–≤": "Borisov",
    "–ú–æ–ª–æ–¥–µ—á–Ω–æ": "Molodechno",
    "–ü–æ–ª–æ—Ü–∫": "Polotsk",
    "–ñ–æ–¥–∏–Ω–æ": "Zhodino",
    "–°–ª–æ–Ω–∏–º": "Slonim",
    "–í–æ–ª–∫–æ–≤—ã—Å–∫": "Volkovysk",
    "–ù–µ—Å–≤–∏–∂": "Nesvizh"
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather –∏ –∫–Ω–æ–ø–∫–∏ "–ü–æ–≥–æ–¥–∞"
@bot.message_handler(commands=['weather'])
@bot.message_handler(func=lambda msg: msg.text == "‚òÅÔ∏è –ü–æ–≥–æ–¥–∞")
def start_weather_check(msg):
    db_handler.add_active_user(msg.chat.id)
    sent_msg = bot.send_message(
        msg.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:",
        reply_markup=region_menu
    )
    bot.register_next_step_handler(sent_msg, handle_region_selection)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞
def handle_region_selection(msg):
    if msg.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return_to_main(msg)
        return
    region = msg.text.strip()
    region_menus = {
        "–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": minsk_cities,
        "–ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": brest_cities,
        "–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": vitebsk_cities,
        "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": gomel_cities,
        "–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": grodno_cities,
        "–ú–æ–≥–∏–ª—ë–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": mogilev_cities
    }
    if region not in region_menus:
        sent_msg = bot.send_message(
            msg.chat.id,
            "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞.",
            reply_markup=region_menu
        )
        bot.register_next_step_handler(sent_msg, handle_region_selection)
        return
    sent_msg = bot.send_message(
        msg.chat.id,
        f"–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ {region}:",
        reply_markup=region_menus[region]
    )
    bot.register_next_step_handler(sent_msg, get_weather)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é
def get_driving_advice(weather_desc, temp, wind_speed, humidity):
    weather_desc = weather_desc.lower()
    if "—Å–Ω–µ–≥" in weather_desc or "–≥–æ–ª–æ–ª–µ–¥" in weather_desc or temp < 0:
        return "‚ùÑÔ∏è –í–æ–∑–º–æ–∂–µ–Ω –≥–æ–ª–æ–ª–µ–¥! –°–Ω–∏–∑—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å, —É–≤–µ–ª–∏—á—å—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∏–º–Ω–∏–µ —à–∏–Ω—ã."
    elif "–¥–æ–∂–¥—å" in weather_desc or humidity > 80:
        return "üåß –î–æ–∂–¥—å. –í–∫–ª—é—á–∏—Ç–µ –¥–≤–æ—Ä–Ω–∏–∫–∏, –∏–∑–±–µ–≥–∞–π—Ç–µ —Ä–µ–∑–∫–∏—Ö –º–∞–Ω–µ–≤—Ä–æ–≤, –¥–µ—Ä–∂–∏—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é."
    elif "—Ç—É–º–∞–Ω" in weather_desc:
        return "üå´ –¢—É–º–∞–Ω. –í–∫–ª—é—á–∏—Ç–µ –ø—Ä–æ—Ç–∏–≤–æ—Ç—É–º–∞–Ω–Ω—ã–µ —Ñ–∞—Ä—ã, –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –º–µ–¥–ª–µ–Ω–Ω–æ."
    elif wind_speed > 10:
        return "üí® –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä. –î–µ—Ä–∂–∏—Ç–µ —Ä—É–ª—å –∫—Ä–µ–ø—á–µ, –∏–∑–±–µ–≥–∞–π—Ç–µ –≤—ã—Å–æ–∫–∏—Ö —Å–∫–æ—Ä–æ—Å—Ç–µ–π."
    elif temp > 30:
        return "‚òÄÔ∏è –ñ–∞—Ä–∫–æ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–µ–π—Ç–µ –≤–æ–¥—É."
    else:
        return "üöó –ü–æ–≥–æ–¥–∞ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–∞—è. –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è."

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã (—Ç–µ–∫—É—â–∞—è + –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 5 –¥–Ω–µ–π)
def get_weather(msg):
    if msg.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return_to_main(msg)
        return
    if msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º":
        sent_msg = bot.send_message(
            msg.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:",
            reply_markup=region_menu
        )
        bot.register_next_step_handler(sent_msg, handle_region_selection)
        return
    city = msg.text.strip()
    valid_cities = list(city_mapping.keys())
    if city not in valid_cities:
        sent_msg = bot.send_message(
            msg.chat.id,
            "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞.",
            reply_markup=region_menu
        )
        bot.register_next_step_handler(sent_msg, handle_region_selection)
        return

    current_url = f"https://api.openweathermap.org/data/2.5/weather?q={city_mapping[city]},BY&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
    forecast_url = f"https://api.openweathermap.org/data/2.5/forecast?q={city_mapping[city]},BY&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"

    try:
        current_response = requests.get(current_url, timeout=5)
        current_response.raise_for_status()
        current_data = current_response.json()
        weather_desc = current_data['weather'][0]['description'].capitalize()
        temp = current_data['main']['temp']
        wind_speed = current_data['wind']['speed']
        humidity = current_data['main']['humidity']
        current_advice = get_driving_advice(weather_desc, temp, wind_speed, humidity)

        forecast_response = requests.get(forecast_url, timeout=5)
        forecast_response.raise_for_status()
        forecast_data = forecast_response.json()

        daily_forecasts = {}
        for forecast in forecast_data["list"]:
            date = datetime.fromtimestamp(forecast["dt"]).strftime("%Y-%m-%d")
            if date not in daily_forecasts and len(daily_forecasts) < 5:
                daily_forecasts[date] = {
                    "temp": forecast["main"]["temp"],
                    "weather": forecast["weather"][0]["description"].capitalize(),
                    "wind_speed": forecast["wind"]["speed"],
                    "humidity": forecast["main"]["humidity"]
                }

        response_text = f"‚òÅÔ∏è –ü–æ–≥–æ–¥–∞ –≤ {city}:\n\n"
        response_text += "üìÖ –°–µ–≥–æ–¥–Ω—è:\n"
        response_text += f"–û–ø–∏—Å–∞–Ω–∏–µ: {weather_desc}\n"
        response_text += f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp:.1f}¬∞C\n"
        response_text += f"–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
        response_text += f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
        response_text += f"{current_advice}\n\n"

        response_text += "üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 5 –¥–Ω–µ–π:\n"
        for date, info in daily_forecasts.items():
            advice = get_driving_advice(info["weather"], info["temp"], info["wind_speed"], info["humidity"])
            response_text += f"\nüìÖ {date}\n"
            response_text += f"–û–ø–∏—Å–∞–Ω–∏–µ: {info['weather']}\n"
            response_text += f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {info['temp']:.1f}¬∞C\n"
            response_text += f"–í–µ—Ç–µ—Ä: {info['wind_speed']} –º/—Å\n"
            response_text += f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {info['humidity']}%\n"
            response_text += f"{advice}\n"

        bot.send_message(
            msg.chat.id,
            response_text,
            reply_markup=main_menu
        )
        logging.info(f"–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ –¥–ª—è {city}: {weather_desc}, {temp}¬∞C –∏ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 5 –¥–Ω–µ–π")
    except requests.exceptions.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã –¥–ª—è {city}: {e}")
        bot.send_message(
            msg.chat.id,
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è {city}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=main_menu
        )

@bot.message_handler(commands=['start'])
def welcome(message):
    db_handler.add_active_user(message.chat.id)
    username = message.from_user.first_name or message.from_user.username or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    text = (
        f"üöó <b>–ü—Ä–∏–≤–µ—Ç, {username}!</b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–†! \n\n"
        "–Ø —Ç–≤–æ–π –≤–µ—Ä–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –Ω–∞ –¥–æ—Ä–æ–≥–µ: –ø–æ–º–æ–≥—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä—É, –∏–∑–±–µ–∂–∞—Ç—å —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ–≥–æ, —á—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è –≤ –ë–µ–ª–∞—Ä—É—Å–∏! üöò\n\n"
        "üî• <b>–ß—Ç–æ —è –º–æ–≥—É –¥–ª—è —Ç–µ–±—è?</b>\n"
        "‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¢–û –∑–∞ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤\n"
        "‚Ä¢ –£–∑–Ω–∞—Ç—å, –∫–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Ä–µ–º–æ–Ω—Ç–µ\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–≥–æ–¥—É –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ —Å–æ–≤–µ—Ç—ã –∏ –Ω–æ–≤–æ—Å—Ç–∏\n"
        "‚Ä¢ –ó–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∞—à–µ–º—É —É–º–Ω–æ–º—É –ò–ò\n\n"
        "üëâ <b>–ù–∞—á–Ω–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b> –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!"
    )
    buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
    buttons.add(
        telebot.types.InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¢–û", callback_data="start_booking"),
        telebot.types.InlineKeyboardButton("üí¨ FAQ", callback_data="show_faq")
    )
    bot.send_message(
        message.chat.id,
        text,
        parse_mode="HTML",
        reply_markup=main_menu
    )

@bot.message_handler(commands=['help'])
def help_message(message):
    db_handler.add_active_user(message.chat.id)
    username = message.from_user.first_name or message.from_user.username or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    text = (
        f"‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–†, {username}</b>\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–æ–º, —Å—Ç—Ä–∞—Ö–æ–≤–∫–æ–π –∏ –¥—Ä—É–≥–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏. –í–æ—Ç –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
        "üìã <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "‚Ä¢ /help ‚Äî –ø–æ–ª—É—á–∏—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "‚Ä¢ /info ‚Äî —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ë–µ–ª–¢–µ—Ö–æ—Å–º–æ—Ç—Ä\n"
        "‚Ä¢ /history ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π\n"
        "‚Ä¢ /update_news ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏\n"
        "üì± <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –º–µ–Ω—é:</b>\n"
        "‚Ä¢ <b>üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä</b>: –£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω, –∞–≤—Ç–æ –∏ –¥–∞—Ç—É.\n"
        "‚Ä¢ <b>üí¨ FAQ</b>: –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö, —à—Ç—Ä–∞—Ñ–∞—Ö –∏ –Ω–µ —Ç–æ–ª—å–∫–æ.\n"
        "‚Ä¢ <b>ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò</b>: –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–ö–∞–∫–∏–µ —Ñ–∞—Ä—ã –Ω—É–∂–Ω—ã –¥–ª—è –¢–û?¬ª\n\n"
        "üí° <b>–°–æ–≤–µ—Ç:</b> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ ¬´ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò¬ª!"
    )
    buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
    buttons.add(
        telebot.types.InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="start_booking"),
        telebot.types.InlineKeyboardButton("üí¨ FAQ", callback_data="show_faq")
    )
    buttons.add(
        telebot.types.InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="show_contacts")
    )
    bot.send_message(
        message.chat.id,
        text,
        parse_mode="HTML",
        reply_markup=buttons
    )

@bot.message_handler(commands=['info'])
def show_info(message):
    db_handler.add_active_user(message.chat.id)
    text = (
        "üè¢ <b>–û –∫–æ–º–ø–∞–Ω–∏–∏ –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–†</b>\n\n"
        "–ú—ã ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–∏ –≤ –ë–µ–ª–∞—Ä—É—Å–∏!\n\n"
        "üîß <b>–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º:</b>\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ: —Ç–æ—Ä–º–æ–∑–∞, —Ñ–∞—Ä—ã, —à–∏–Ω—ã –∏ –¥—Ä—É–≥–æ–µ.\n"
        "‚Ä¢ –í—ã–¥–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é.\n"
        "‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–æ—á–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.\n\n"
        "üìÖ <b>–ü—Ä–∞–≤–∏–ª–∞ –¢–û –≤ 2025 –≥–æ–¥—É:</b>\n"
        "‚Ä¢ –ù–æ–≤—ã–µ –∞–≤—Ç–æ (–¥–æ 3 –ª–µ—Ç): —Ä–∞–∑ –≤ 3 –≥–æ–¥–∞\n"
        "‚Ä¢ –ê–≤—Ç–æ 3‚Äì10 –ª–µ—Ç: —Ä–∞–∑ –≤ 2 –≥–æ–¥–∞\n"
        "‚Ä¢ –ê–≤—Ç–æ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç: –µ–∂–µ–≥–æ–¥–Ω–æ\n\n"
        "üåü <b>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?</b>\n"
        "‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π\n"
        "‚Ä¢ –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —Ü–µ–Ω—ã\n"
        "‚Ä¢ –£–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –ú–∏–Ω—Å–∫–µ\n\n"
        "üëâ –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ!"
    )
    buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
    buttons.add(
        telebot.types.InlineKeyboardButton("üåê –°–∞–π—Ç", url="https://gto.by/"),
        telebot.types.InlineKeyboardButton("üìç –ö–∞—Ä—Ç–∞", url="https://yandex.by/maps/-/CDuX9f~Y")
    )
    buttons.add(
        telebot.types.InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="show_contacts")
    )
    bot.send_message(
        message.chat.id,
        text,
        parse_mode="HTML",
        reply_markup=buttons
    )

@bot.message_handler(commands=['update_news'])
def update_news(message):
    db_handler.add_active_user(message.chat.id)
    text = "‚è≥ <b>–û–±–Ω–æ–≤–ª—è—é –Ω–æ–≤–æ—Å—Ç–∏...</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —è –∑–∞–≥—Ä—É–∂–∞—é —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–µ –∏ –∞–≤—Ç–æ –≤ –ë–µ–ª–∞—Ä—É—Å–∏."
    sent_msg = bot.send_message(message.chat.id, text, parse_mode="HTML")
    try:
        db_handler.parse_news_from_gto()
        bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=sent_msg.message_id,
            text=(
                "‚úÖ <b>–ù–æ–≤–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!</b>\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´üì∞ –ù–æ–≤–æ—Å—Ç–∏¬ª.\n\n"
                "üëâ –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, —á—Ç–æ –Ω–æ–≤–æ–≥–æ?"
            ),
            parse_mode="HTML",
            reply_markup=telebot.types.InlineKeyboardMarkup().add(
                telebot.types.InlineKeyboardButton("üì∞ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏", callback_data="show_news")
            )
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=sent_msg.message_id,
            text=(
                "‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏</b>\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.\n\n"
                "üëâ –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ò–ò!"
            ),
            parse_mode="HTML",
            reply_markup=telebot.types.InlineKeyboardMarkup().add(
                telebot.types.InlineKeyboardButton("ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò", callback_data="start_ai_mode")
            )
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥
@bot.callback_query_handler(func=lambda call: call.data in ["start_booking", "show_faq", "show_contacts", "open_calculator", "show_news", "start_ai_mode"])
def handle_command_actions(call):
    bot.answer_callback_query(call.id)
    if call.data == "start_booking":
        text = (
            "üöó <b>–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ!</b>\n\n"
            "–° –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–† –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –∫ –¥–æ—Ä–æ–≥–µ! "
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Å—Ç–∞–Ω—Ü–∏—é –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞. "
            "–ú—ã –æ–±–µ—Å–ø–µ—á–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.\n\n"
            "üëâ <b>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–µ–π—á–∞—Å:</b>"
        )
        buttons = telebot.types.InlineKeyboardMarkup()
        buttons.add(telebot.types.InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://gto.by/"))
        bot.send_message(
            call.message.chat.id,
            text,
            parse_mode="HTML",
            reply_markup=buttons,
            disable_web_page_preview=True
        )
    elif call.data == "show_faq":
        bot.send_message(
            call.message.chat.id,
            "‚ùì <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá",
            parse_mode="HTML",
            reply_markup=faq_menu
        )
    elif call.data == "show_contacts":
        text = (
            "üìû <b>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–†</b>\n\n"
            "üìç <b>–ê–¥—Ä–µ—Å:</b> –≥. –ú–∏–Ω—Å–∫, —É–ª. –ü–ª–∞—Ç–æ–Ω–æ–≤–∞, 22–∞\n"
            "üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +375 (17) 311-09-80\n"
            "‚úâÔ∏è <b>Email:</b> info@gto.by\n"
            "üïí <b>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</b>\n"
            "   –ü–Ω‚Äì–ß—Ç: 8:30‚Äì17:30\n"
            "   –ü—Ç: 8:30‚Äì16:15\n"
            "   –û–±–µ–¥: 12:15‚Äì13:00\n"
            "   –°–±‚Äì–í—Å: –≤—ã—Ö–æ–¥–Ω–æ–π\n\n"
            "üåê –ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç –∏–ª–∏ –Ω–∞–π–¥–∏—Ç–µ –Ω–∞—Å –Ω–∞ –∫–∞—Ä—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ üëá"
        )
        buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
        buttons.add(
            telebot.types.InlineKeyboardButton("üåê –°–∞–π—Ç", url="https://gto.by/"),
            telebot.types.InlineKeyboardButton("üìç –ö–∞—Ä—Ç–∞", url="https://yandex.by/maps/-/CDuX9f~Y")
        )
        bot.send_message(
            call.message.chat.id,
            text,
            parse_mode="HTML",
            reply_markup=buttons,
            disable_web_page_preview=True
        )
    elif call.data == "show_news":
        bot.send_message(
            call.message.chat.id,
            "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤–æ—Å—Ç–∏...",
            reply_markup=main_menu
        )
        send_news(call.message.chat.id, db_handler.get_all_news(), "–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏")
    elif call.data == "start_ai_mode":
        user_states[call.message.chat.id] = {'ai_mode': True}
        bot.send_message(
            call.message.chat.id,
            "ü§ñ <b>–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –¢–û?¬ª\n"
            "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ ¬´‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª.",
            parse_mode="HTML",
            reply_markup=ai_mode_menu
        )

# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda msg: msg.text in ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚ùå –û—Ç–º–µ–Ω–∞"])
def return_to_main(msg):
    if msg.chat.id in user_states:
        user_states[msg.chat.id]['ai_mode'] = False
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(msg.chat.id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∑—ã–≤–∞
@bot.message_handler(func=lambda msg: msg.text == "‚ú® –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
def start_feedback(msg):
    db_handler.add_active_user(msg.chat.id)
    sent_msg = bot.send_message(
        msg.chat.id,
        "–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à—É —Ä–∞–±–æ—Ç—É, –≤—ã–±—Ä–∞–≤ –∑–≤–µ–∑–¥—ã ‚≠ê",
        reply_markup=feedback_menu
    )
    bot.register_next_step_handler(sent_msg, handle_feedback_rating)

def handle_feedback_rating(message):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return_to_main(message)
        return
    rating = None if message.text == "‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –æ—Ü–µ–Ω–∫–∏" else message.text
    sent_msg = bot.send_message(
        message.chat.id,
        "–°–ø–∞—Å–∏–±–æ! –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:",
        reply_markup=telebot.types.ForceReply(selective=True)
    )
    bot.register_next_step_handler(sent_msg, save_feedback, rating)

def save_feedback(message, rating):
    feedback = message.text.strip()
    username = message.from_user.first_name or message.from_user.username or "–ê–Ω–æ–Ω–∏–º"
    db_handler.add_feedback(message.chat.id, feedback, rating, username)
    bot.send_message(message.chat.id, "‚úÖ –û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!", reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
@bot.message_handler(func=lambda msg: msg.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏")
def show_news_menu(msg):
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(msg.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=news_menu)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
def send_news(chat_id, news_list, title):
    if not news_list:
        bot.send_message(chat_id, f"üì≠ {title} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ /update_news.", reply_markup=main_menu)
        return
    bot.send_message(chat_id, f"<b>üîé {title}:</b>", parse_mode="HTML")
    for news in news_list[:10]:
        if news['content'] == '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' or not news['content']:
            preview = "–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ."
        else:
            preview = news['content'][:200] + '...' if len(news['content']) > 200 else news['content']
        buttons = telebot.types.InlineKeyboardMarkup()
        buttons.add(telebot.types.InlineKeyboardButton("üìñ –ß–∏—Ç–∞—Ç—å", callback_data=f"read_{news['id']}"))
        text = f"<b>{news['title']}</b>\n<i>üìÖ {news['date']}</i>\n\n{preview}"
        bot.send_message(chat_id, text, parse_mode="HTML", reply_markup=buttons)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
@bot.message_handler(func=lambda msg: msg.text == "üì∞ –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏")
def show_latest_news(msg):
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(msg.chat.id, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤–æ—Å—Ç–∏...", reply_markup=main_menu)
    send_news(msg.chat.id, db_handler.get_all_news(), "–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith('read_'))
def show_full_news(call):
    db_handler.add_active_user(call.message.chat.id)
    bot.answer_callback_query(call.id, "–ó–∞–≥—Ä—É–∂–∞—é...")
    news_id = int(call.data.replace('read_', ''))
    news = next((n for n in db_handler.get_all_news() if n['id'] == news_id), None)
    if not news:
        bot.send_message(call.message.chat.id, "‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", reply_markup=main_menu)
        return
    content = news['content'] if news['content'] != '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' else "–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ."
    text = f"<b>{news['title']}</b>\n<i>üìÖ {news['date']}</i>\n\n{content}\n\nüîó <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> {news['url']}"
    if len(text) > 4096:
        for part in range(0, len(text), 4096):
            bot.send_message(call.message.chat.id, text[part:part + 4096], parse_mode="HTML", disable_web_page_preview=True)
    else:
        bot.send_message(call.message.chat.id, text, parse_mode="HTML", disable_web_page_preview=True)

# –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –¥–∞—Ç–∞–º
@bot.message_handler(func=lambda msg: msg.text == "üìÖ –ù–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥")
def start_period_search(msg):
    db_handler.add_active_user(msg.chat.id)
    sent_msg = bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É (–î–î.–ú–ú.–ì–ì–ì–ì):", reply_markup=cancel_menu)
    bot.register_next_step_handler(sent_msg, handle_start_date)

def handle_start_date(message):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return_to_main(message)
        return
    if not check_search_date(message.text):
        sent_msg = bot.send_message(message.chat.id, "‚ùó –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì.", reply_markup=cancel_menu)
        bot.register_next_step_handler(sent_msg, handle_start_date)
        return
    sent_msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É (–î–î.–ú–ú.–ì–ì–ì–ì):", reply_markup=cancel_menu)
    bot.register_next_step_handler(sent_msg, handle_end_date, message.text)

def handle_end_date(message, start_date):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return_to_main(message)
        return
    end_date = message.text
    if not check_search_date(end_date):
        sent_msg = bot.send_message(message.chat.id, "‚ùó –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì.", reply_markup=cancel_menu)
        bot.register_next_step_handler(sent_msg, handle_end_date, start_date)
        return
    if datetime.strptime(start_date, '%d.%m.%Y') > datetime.strptime(end_date, '%d.%m.%Y'):
        sent_msg = bot.send_message(message.chat.id, "‚ùó –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –∫–æ–Ω–µ—á–Ω–æ–π.", reply_markup=cancel_menu)
        bot.register_next_step_handler(sent_msg, handle_start_date)
        return
    bot.send_message(message.chat.id, "‚è≥ –ò—â—É –Ω–æ–≤–æ—Å—Ç–∏...", reply_markup=main_menu)
    send_news(message.chat.id, db_handler.get_news_by_period(start_date, end_date), f"–ù–æ–≤–æ—Å—Ç–∏ —Å {start_date} –ø–æ {end_date}")

# –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
@bot.message_handler(func=lambda msg: msg.text == "üîç –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
def start_keyword_search(msg):
    db_handler.add_active_user(msg.chat.id)
    sent_msg = bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ:", reply_markup=cancel_menu)
    bot.register_next_step_handler(sent_msg, handle_keyword_search)

def handle_keyword_search(message):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return_to_main(message)
        return
    keyword = message.text.strip()
    if not keyword:
        sent_msg = bot.send_message(message.chat.id, "‚ùó –ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.", reply_markup=cancel_menu)
        bot.register_next_step_handler(sent_msg, handle_keyword_search)
        return
    bot.send_message(message.chat.id, f"‚è≥ –ò—â—É ¬´{keyword}¬ª...", reply_markup=main_menu)
    send_news(message.chat.id, db_handler.search_news(keyword), f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ ¬´{keyword}¬ª")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ FAQ
@bot.message_handler(func=lambda msg: msg.text == "üí¨ FAQ")
def show_faq(msg):
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(
        msg.chat.id,
        "‚ùì <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá",
        parse_mode="HTML",
        reply_markup=faq_menu
    )

@bot.message_handler(func=lambda msg: msg.text in [
    "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –¢–û", "‚ùì –¢–û –±–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏", "‚ö†Ô∏è –®—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É", "üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û",
    "üìÜ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –¢–û", "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", "üö´ –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–µ–ª –¢–û", "üßæ –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞"
])
def answer_faq(msg):
    answers = {
        "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –¢–û": (
            "üìë <b>–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞?</b>\n\n"
            "–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –≤ –ë–µ–ª–∞—Ä—É—Å–∏ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è:\n"
            "‚úÖ –ü–∞—Å–ø–æ—Ä—Ç –∏–ª–∏ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ ‚Äî –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏.\n"
            "‚úÖ –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–° (—Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç) ‚Äî –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.\n"
            "‚úÖ –î–µ–π—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª–∏—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è (¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª).\n"
            "‚úÖ –ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ –≥–æ—Å–ø–æ—à–ª–∏–Ω—ã –∑–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä.\n\n"
            "üí° <i>–°–æ–≤–µ—Ç:</i> –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –∞–ø—Ç–µ—á–∫–∏, –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—è –∏ –∑–Ω–∞–∫–∞ –∞–≤–∞—Ä–∏–π–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ‚Äî –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç–∫–∞–∑–∞. "
            "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –¢–û —á–µ—Ä–µ–∑ –º–µ–Ω—é ¬´üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä¬ª!"
        ),
        "‚ùì –¢–û –±–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏": (
            "üõë <b>–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –±–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏?</b>\n\n"
            "–í –†–µ—Å–ø—É–±–ª–∏–∫–µ –ë–µ–ª–∞—Ä—É—Å—å —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –±–µ–∑ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª–∏—Å–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è (¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª) –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω. "
            "–°–æ–≥–ª–∞—Å–Ω–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏–µ–º –¥–ª—è –¥–æ–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏.\n\n"
            "üìå <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å?</b>\n"
            "1. –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–ª–∏—Å ¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª –≤ –ª—é–±–æ–π —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.\n"
            "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –¢–û.\n"
            "3. –ü—Ä–∏–Ω–µ—Å–∏—Ç–µ –ø–æ–ª–∏—Å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞.\n\n"
            "üí° –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´üìÑ –û —Å—Ç—Ä–∞—Ö–æ–≤–∫–µ¬ª."
        ),
        "‚ö†Ô∏è –®—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É": (
            "üëÆ <b>–ö–∞–∫–∏–µ —à—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä?</b>\n\n"
            "–í–æ–∂–¥–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –±–µ–∑ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –≤–ª–µ—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:\n"
            "üö® –®—Ç—Ä–∞—Ñ: –æ—Ç 1 –¥–æ 3 –±–∞–∑–æ–≤—ã—Ö –≤–µ–ª–∏—á–∏–Ω (–≤ 2025 –≥–æ–¥—É ‚Äî –¥–æ 120 BYN).\n"
            "üö® –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –Ω–∞—Ä—É—à–µ–Ω–∏–∏: —à—Ç—Ä–∞—Ñ –¥–æ 5 –±–∞–∑–æ–≤—ã—Ö –≤–µ–ª–∏—á–∏–Ω –∏–ª–∏ –ª–∏—à–µ–Ω–∏–µ –ø—Ä–∞–≤.\n"
            "üö® –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏: –±–µ–∑ –¢–û —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π.\n"
            "üö® –°–Ω—è—Ç–∏–µ –∞–≤—Ç–æ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –≤ —Å–ª—É—á–∞–µ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π.\n\n"
            "üí° <i>–°–æ–≤–µ—Ç:</i> –ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –≤–æ–≤—Ä–µ–º—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º. "
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä¬ª –¥–ª—è —É–¥–æ–±–Ω–æ–π –∑–∞–ø–∏—Å–∏!"
        ),
        "üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û": (
            "üí∞ <b>–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä?</b>\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –≤ –ë–µ–ª–∞—Ä—É—Å–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞:\n"
            "üöó –õ–µ–≥–∫–æ–≤—ã–µ –∞–≤—Ç–æ: –æ—Ç 35 –¥–æ 50 BYN.\n"
            "üöö –ì—Ä—É–∑–æ–≤—ã–µ –∞–≤—Ç–æ: –æ—Ç 50 –¥–æ 80 BYN.\n"
            "üöå –ê–≤—Ç–æ–±—É—Å—ã: –æ—Ç 60 –¥–æ 100 BYN.\n"
            "üèç –ú–æ—Ç–æ—Ü–∏–∫–ª—ã: –æ–∫–æ–ª–æ 20‚Äì30 BYN.\n\n"
            "üìå <b>–§–∞–∫—Ç–æ—Ä—ã, –≤–ª–∏—è—é—â–∏–µ –Ω–∞ —Ü–µ–Ω—É:</b>\n"
            "- –¢–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è (–¥–∏–∑–µ–ª—å/–±–µ–Ω–∑–∏–Ω/—ç–ª–µ–∫—Ç—Ä–æ/–≥–∞–∑).\n"
            "- –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ (—Å—Ç–∞—Ä—ã–µ –∞–≤—Ç–æ –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø. –ø—Ä–æ–≤–µ—Ä–æ–∫).\n"
            "- –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¢–û (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–∏ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞).\n\n"
            "üí° –î–ª—è —Ç–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´üíº –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–û¬ª –≤ –º–µ–Ω—é!"
        ),
        "üìÜ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –¢–û": (
            "üìÖ <b>–ö–∞–∫ —á–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä?</b>\n\n"
            "–í –†–µ—Å–ø—É–±–ª–∏–∫–µ –ë–µ–ª–∞—Ä—É—Å—å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n"
            "üöó –ù–æ–≤—ã–µ –∞–≤—Ç–æ (–¥–æ 3 –ª–µ—Ç): —Ä–∞–∑ –≤ 3 –≥–æ–¥–∞.\n"
            "üöó –ê–≤—Ç–æ –æ—Ç 3 –¥–æ 10 –ª–µ—Ç: —Ä–∞–∑ –≤ 2 –≥–æ–¥–∞.\n"
            "üöó –ê–≤—Ç–æ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç: –µ–∂–µ–≥–æ–¥–Ω–æ.\n"
            "üöå –ê–≤—Ç–æ–±—É—Å—ã –∏ —Ç–∞–∫—Å–∏: –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤.\n\n"
            "üìå <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –°—Ä–æ–∫ –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç –¥–∞—Ç—ã –≤—ã–¥–∞—á–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–æ–ø—É—Å–∫ –¢–° –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏. "
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¢–û –≤ —Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç–µ.\n\n"
            "üí° –ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≤–∏–∑–∏—Ç –∑–∞—Ä–∞–Ω–µ–µ —á–µ—Ä–µ–∑ ¬´üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä¬ª!"
        ),
        "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å": (
            "üîÑ <b>–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –¢–û?</b>\n\n"
            "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä:\n"
            "1. üì± –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É <b>+375 (17) 311-09-80</b>.\n"
            "2. –°–æ–æ–±—â–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ (—Ç–µ–ª–µ—Ñ–æ–Ω, –¥–∞—Ç—É –∑–∞–ø–∏—Å–∏, –∞–≤—Ç–æ).\n"
            "3. –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å.\n\n"
            "üíª <b>–û–Ω–ª–∞–π–Ω:</b> –ò–∑–º–µ–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ <a href='https://gto.by/'>gto.by</a> (–µ—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å).\n\n"
            "üí° <i>–°–æ–≤–µ—Ç:</i> –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è. "
            "–ü–æ—Å–µ—Ç–∏—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª –¥–ª—è —Å–≤—è–∑–∏."
        ),
        "üö´ –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–µ–ª –¢–û": (
            "üõ†Ô∏è <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –ø—Ä–æ—à–µ–ª —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä?</b>\n\n"
            "–ï—Å–ª–∏ –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –ø—Ä–æ—à–µ–ª —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä:\n"
            "1. üìã –ü–æ–ª—É—á–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π.\n"
            "2. üîß –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∏—Ç–µ –∏–∑–Ω–æ—à–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, –æ—Ç—Ä–µ–≥—É–ª–∏—Ä—É–π—Ç–µ —Ñ–∞—Ä—ã).\n"
            "3. üîÑ –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é –≤ —Ç–µ—á–µ–Ω–∏–µ <b>20 –¥–Ω–µ–π</b> –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.\n"
            "4. üí∞ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –æ–±–æ–π–¥–µ—Ç—Å—è –¥–µ—à–µ–≤–ª–µ (–ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏).\n\n"
            "üí° <i>–°–æ–≤–µ—Ç:</i> –ü–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –≤–∏–∑–∏—Ç–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–º–µ—á–∞–Ω–∏—è —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã. "
            "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å —á–µ—Ä–µ–∑ ¬´üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä¬ª!"
        ),
        "üßæ –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞": (
            "‚úÖ <b>–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –æ–Ω–ª–∞–π–Ω?</b>\n\n"
            "–û–ø–ª–∞—Ç—É —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –≤ –ë–µ–ª–∞—Ä—É—Å–∏ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ï–†–ò–ü –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ:\n"
            "1. üíª –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç <a href='https://gto.by/pay/?step=1'>gto.by</a> –∏ –≤—ã–±–µ—Ä–∏—Ç–µ ¬´–û–ø–ª–∞—Ç–∞¬ª.\n"
            "2. üè¶ –ß–µ—Ä–µ–∑ –ï–†–ò–ü: –Ω–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª ¬´–ë–ï–õ–¢–ï–•–û–°–ú–û–¢–†¬ª, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¢–° –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≥–æ—Å–ø–æ—à–ª–∏–Ω—É.\n"
            "3. üí≥ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –∏–ª–∏ –º–æ–±–∏–ª—å–Ω—ã–π –±–∞–Ω–∫–∏–Ω–≥.\n\n"
            "üìå <b>–í–∞–∂–Ω–æ:</b> –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ ‚Äî –æ–Ω–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ –¢–û.\n\n"
            "üí° –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ ¬´üíº –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–û¬ª –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ —Å—Ä–∞–∑—É!"
        )
    }
    buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
    if msg.text == "üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –¢–û":
        pass
    elif msg.text == "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å" or msg.text == "üö´ –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–µ–ª –¢–û":
        buttons.add(telebot.types.InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="start_booking"))
    elif msg.text == "üßæ –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞":
        buttons.add(telebot.types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url="https://gto.by/pay/?step=1"))
    elif msg.text == "‚ùì –¢–û –±–µ–∑ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏":
        buttons.add(telebot.types.InlineKeyboardButton("üìÑ –û —Å—Ç—Ä–∞—Ö–æ–≤–∫–µ", callback_data="show_insurance"))
    elif msg.text == "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –¢–û":
        buttons.add(telebot.types.InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="start_booking"))
    bot.send_message(
        msg.chat.id,
        answers[msg.text],
        parse_mode="HTML",
        reply_markup=buttons,
        disable_web_page_preview=True
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è FAQ
@bot.callback_query_handler(func=lambda call: call.data in ["start_booking", "show_insurance"])
def handle_faq_actions(call):
    bot.answer_callback_query(call.id)
    if call.data == "start_booking":
        buttons = telebot.types.InlineKeyboardMarkup()
        buttons.add(telebot.types.InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏", url="https://gto.by/"))
        bot.send_message(
            call.message.chat.id,
            "üöó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä:",
            parse_mode="HTML",
            reply_markup=buttons,
            disable_web_page_preview=True
        )
    elif call.data == "show_insurance":
        bot.send_message(
            call.message.chat.id,
            "üöó <b>–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ ‚Äî –≤–∞—à–∞ –∑–∞—â–∏—Ç–∞ –Ω–∞ –¥–æ—Ä–æ–≥–µ</b>\n\n"
            "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ (¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª –∏–ª–∏ –ö–ê–°–ö–û) ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å, –∞ –≤–∞–∂–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è, –∫–æ—Ç–æ—Ä–∞—è:\n\n"
            "üõ°Ô∏è <b>–ó–∞—â–∏—â–∞–µ—Ç –≤–∞—à –±—é–¥–∂–µ—Ç</b> ‚Äî –ø–æ–∫—Ä—ã–≤–∞–µ—Ç —É–±—ã—Ç–∫–∏ –ø—Ä–∏ –î–¢–ü, —Å–ø–∞—Å–∞—è –æ—Ç –∫—Ä—É–ø–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤.\n"
            "‚öñÔ∏è <b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø–æ –∑–∞–∫–æ–Ω—É</b> ‚Äî –±–µ–∑ –ø–æ–ª–∏—Å–∞ ¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∏¬ª —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º <u>–∑–∞–ø—Ä–µ—â–µ–Ω–æ</u>.\n"
            "üè• <b>–ü–æ–º–æ–≥–∞–µ—Ç –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö</b> ‚Äî –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ª–µ—á–µ–Ω–∏–µ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö –≤ –∞–≤–∞—Ä–∏–∏.\n"
            "üîß <b>–ü–æ–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ–º–æ–Ω—Ç</b> ‚Äî –ö–ê–°–ö–û –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç —É—â–µ—Ä–± –≤–∞—à–µ–º—É –∞–≤—Ç–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –î–¢–ü –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ –≤–∞—à–µ–π –≤–∏–Ω–µ.\n\n"
            "üí° <i>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –≤ –ë–µ–ª–∞—Ä—É—Å–∏:</i>\n"
            "‚Ä¢ <b>¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª</b> ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ (–≤–æ–∑–º–µ—â–∞–µ—Ç —É—â–µ—Ä–± —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º).\n"
            "‚Ä¢ <b>–ö–ê–°–ö–û</b> ‚Äî –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ —Å –ø–æ–ª–Ω–æ–π –∑–∞—â–∏—Ç–æ–π –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.\n\n"
            "üìå –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–∞—Ä–∏—Ñ–∞—Ö –∏ —É—Å–ª–æ–≤–∏—è—Ö —á–∏—Ç–∞–π—Ç–µ –Ω–∞ <a href='https://gto.by/'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>",
            parse_mode="HTML",
            reply_markup=main_menu,
            disable_web_page_preview=True
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä"
@bot.message_handler(func=lambda msg: msg.text == "üìù –ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä")
def start_booking(msg):
    text = (
        "üöó <b>–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ!</b>\n\n"
        "–° –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–† –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –∫ –¥–æ—Ä–æ–≥–µ! "
        "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Å—Ç–∞–Ω—Ü–∏—é –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞. "
        "–ú—ã –æ–±–µ—Å–ø–µ—á–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.\n\n"
        "üëâ <b>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–µ–π—á–∞—Å:</b>"
    )
    buttons = telebot.types.InlineKeyboardMarkup()
    buttons.add(telebot.types.InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://gto.by/diagnostic-stations/"))
    bot.send_message(
        msg.chat.id,
        text,
        parse_mode="HTML",
        reply_markup=buttons,
        disable_web_page_preview=True
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä
@bot.callback_query_handler(func=lambda call: call.data == "start_booking")
def handle_command_actions(call):
    bot.answer_callback_query(call.id)
    buttons = telebot.types.InlineKeyboardMarkup()
    buttons.add(telebot.types.InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏", url="https://gto.by/"))
    bot.send_message(
        call.message.chat.id,
        "üöó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä:",
        parse_mode="HTML",
        reply_markup=buttons,
        disable_web_page_preview=True
    )


# –£—Å–ª—É–≥–∏
@bot.message_handler(func=lambda msg: msg.text == "üõ†Ô∏è –£—Å–ª—É–≥–∏")
def show_services(msg):
    db_handler.add_active_user(msg.chat.id)
    text = """
üîß <b>–£—Å–ª—É–≥–∏ –ë–µ–ª–¢–µ—Ö–æ—Å–º–æ—Ç—Ä</b>

üöó <b>–û—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>
‚Ä¢ –ì–æ—Å—Ç–µ—Ö–æ—Å–º–æ—Ç—Ä
‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ï–ö–ú–¢
‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ –Ω–µ–æ–∫–∞–∑–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏

üìã <b>–ú–°–¢–û:</b>
‚Ä¢ –î–æ–ø—É—Å–∫ –¥–ª—è –æ–ø–∞—Å–Ω—ã—Ö –≥—Ä—É–∑–æ–≤
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç –¢–°
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è —Å—Ç–∞–Ω—Ü–∏–π
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¢–°

üõ†Ô∏è <b>–°–¢–û:</b>
‚Ä¢ –ê—Ä–µ–Ω–¥–∞ –ø–æ–º–µ—â–µ–Ω–∏–π
‚Ä¢ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –¢–µ—Ö–æ—Å–º–æ—Ç—Ä –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π
‚Ä¢ –•—Ä–∞–Ω–µ–Ω–∏–µ —à–∏–Ω
‚Ä¢ –ó–∞–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂
‚Ä¢ –ê–≤—Ç–æ–º–æ–π–∫–∞
‚Ä¢ –ó–∞—Ä—è–¥–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–µ–π

‚ö° <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>
‚Ä¢ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Ç–∞—Ö–æ–≥—Ä–∞—Ñ–æ–≤
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚Ä¢ –ü–æ–º–æ—â—å —Å–æ —Å—Ç—Ä–∞—Ö–æ–≤–∫–æ–π
‚Ä¢ –≠–∫—Å–ø—Ä–µ—Å—Å-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
"""
    buttons = telebot.types.InlineKeyboardMarkup()
    buttons.add(telebot.types.InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="service_booking"))
    buttons.add(telebot.types.InlineKeyboardButton("üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="service_price"))
    bot.send_message(msg.chat.id, text, parse_mode="HTML", reply_markup=buttons)


@bot.callback_query_handler(func=lambda call: call.data in ["service_booking", "service_price"])
def handle_service_action(call):
    db_handler.add_active_user(call.message.chat.id)
    bot.answer_callback_query(call.id)
    if call.data == "service_booking":
        bot.send_message(
            call.message.chat.id,
            "üìù –í—ã–±–µ—Ä–∏—Ç–µ '–ó–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä' –≤ –º–µ–Ω—é –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ!",
            reply_markup=main_menu
        )
    else:
        bot.send_message(
            call.message.chat.id,
            "üí∞ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¢–û' –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É!",
            reply_markup=main_menu
        )


# –û —Å—Ç—Ä–∞—Ö–æ–≤–∫–µ
@bot.message_handler(func=lambda msg: msg.text == "üìÑ –û —Å—Ç—Ä–∞—Ö–æ–≤–∫–µ")
def show_insurance(msg):
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(
        msg.chat.id,
        "üöó <b>–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ ‚Äî –≤–∞—à–∞ –∑–∞—â–∏—Ç–∞ –Ω–∞ –¥–æ—Ä–æ–≥–µ</b>\n\n"
        "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ (¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª –∏–ª–∏ –ö–ê–°–ö–û) ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å, –∞ –≤–∞–∂–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è, –∫–æ—Ç–æ—Ä–∞—è:\n\n"
        "üõ°Ô∏è <b>–ó–∞—â–∏—â–∞–µ—Ç –≤–∞—à –±—é–¥–∂–µ—Ç</b> ‚Äî –ø–æ–∫—Ä—ã–≤–∞–µ—Ç —É–±—ã—Ç–∫–∏ –ø—Ä–∏ –î–¢–ü, —Å–ø–∞—Å–∞—è –æ—Ç –∫—Ä—É–ø–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤.\n"
        "‚öñÔ∏è <b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø–æ –∑–∞–∫–æ–Ω—É</b> ‚Äî –±–µ–∑ –ø–æ–ª–∏—Å–∞ ¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∏¬ª —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º <u>–∑–∞–ø—Ä–µ—â–µ–Ω–æ</u>.\n"
        "üè• <b>–ü–æ–º–æ–≥–∞–µ—Ç –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö</b> ‚Äî –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ª–µ—á–µ–Ω–∏–µ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö –≤ –∞–≤–∞—Ä–∏–∏.\n"
        "üîß <b>–ü–æ–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ–º–æ–Ω—Ç</b> ‚Äî –ö–ê–°–ö–û –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç —É—â–µ—Ä–± –≤–∞—à–µ–º—É –∞–≤—Ç–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –î–¢–ü –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ –≤–∞—à–µ–π –≤–∏–Ω–µ.\n\n"
        "üí° <i>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –≤ –ë–µ–ª–∞—Ä—É—Å–∏:</i>\n"
        "‚Ä¢ <b>¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫–∞¬ª</b> ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ (–≤–æ–∑–º–µ—â–∞–µ—Ç —É—â–µ—Ä–± —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º).\n"
        "‚Ä¢ <b>–ö–ê–°–ö–û</b> ‚Äî –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ —Å –ø–æ–ª–Ω–æ–π –∑–∞—â–∏—Ç–æ–π –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.\n\n"
        "üìå –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–∞—Ä–∏—Ñ–∞—Ö –∏ —É—Å–ª–æ–≤–∏—è—Ö —á–∏—Ç–∞–π—Ç–µ –Ω–∞ <a href='https://gto.by/'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>",
        reply_markup=main_menu,
        parse_mode="HTML",
        disable_web_page_preview=True
    )


# –û –∫–æ–º–ø–∞–Ω–∏–∏
@bot.message_handler(func=lambda msg: msg.text == "‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏")
def show_company_info(msg):
    db_handler.add_active_user(msg.chat.id)
    text = (
        "üè¢ <b>–ë–ï–õ–¢–ï–•–û–°–ú–û–¢–† ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –Ω–∞ –¥–æ—Ä–æ–≥–µ!</b>\n\n"
        "–ú—ã ‚Äî –ª–∏–¥–µ—Ä—ã –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä–∞ –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –≤ –ë–µ–ª–∞—Ä—É—Å–∏, –ø–æ–º–æ–≥–∞—è —Ç—ã—Å—è—á–∞–º –≤–æ–¥–∏—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–≤–æ–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ –∏–¥–µ–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.\n\n"
        "üîß <b>–ù–∞—à–∏ —É—Å–ª—É–≥–∏:</b>\n"
        "‚Ä¢ <b>–¢–µ—Ö–æ—Å–º–æ—Ç—Ä:</b> –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—Ä–º–æ–∑–∞, —Ñ–∞—Ä—ã, —à–∏–Ω—ã, –∞–ø—Ç–µ—á–∫—É, –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n"
        "‚Ä¢ <b>–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ:</b> –û—Ñ–æ—Ä–º–ª—è–µ–º ¬´–ê–≤—Ç–æ–≥—Ä–∞–∂–¥–∞–Ω–∫—É¬ª –∏ –ö–ê–°–ö–û –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ.\n"
        "‚Ä¢ <b>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</b> –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–æ—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ.\n"
        "‚Ä¢ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b> –®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂, –∞–≤—Ç–æ–º–æ–π–∫–∞, –∑–∞—Ä—è–¥–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–µ–π –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n\n"
        "üìÖ <b>–ü—Ä–∞–≤–∏–ª–∞ –¢–û –≤ 2025 –≥–æ–¥—É:</b>\n"
        "‚Ä¢ –ù–æ–≤—ã–µ –∞–≤—Ç–æ (–¥–æ 3 –ª–µ—Ç): —Ä–∞–∑ –≤ 3 –≥–æ–¥–∞\n"
        "‚Ä¢ –ê–≤—Ç–æ 3‚Äì10 –ª–µ—Ç: —Ä–∞–∑ –≤ 2 –≥–æ–¥–∞\n"
        "‚Ä¢ –ê–≤—Ç–æ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç: –µ–∂–µ–≥–æ–¥–Ω–æ\n"
        "‚Ä¢ –ê–≤—Ç–æ–±—É—Å—ã –∏ —Ç–∞–∫—Å–∏: –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤\n\n"
        "üåü <b>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?</b>\n"
        "‚úÖ –ë—ã—Å—Ç—Ä–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π\n"
        "‚úÖ –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —Ü–µ–Ω—ã –∏ –Ω–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π\n"
        "‚úÖ –£–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –≥. –ú–∏–Ω—Å–∫, —É–ª. –ü–ª–∞—Ç–æ–Ω–æ–≤–∞, 22–∞\n"
        "‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n\n"
        "üëâ –ì–æ—Ç–æ–≤—ã –∫ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä—É? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ!"
    )
    buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
    buttons.add(
        telebot.types.InlineKeyboardButton("üåê –°–∞–π—Ç", url="https://gto.by/"),
        telebot.types.InlineKeyboardButton("üìç –ö–∞—Ä—Ç–∞", url="https://yandex.by/maps/-/CDuX9f~Y")
    )
    buttons.add(
        telebot.types.InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¢–û", callback_data="start_booking")
    )
    buttons.add(
        telebot.types.InlineKeyboardButton("üí¨ FAQ", callback_data="show_faq"),
        telebot.types.InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="show_contacts")
    )
    bot.send_message(
        msg.chat.id,
        text,
        parse_mode="HTML",
        reply_markup=buttons,
        disable_web_page_preview=True
    )


# –ö–æ–Ω—Ç–∞–∫—Ç—ã
@bot.message_handler(func=lambda msg: msg.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
def show_contacts(msg):
    db_handler.add_active_user(msg.chat.id)
    text = (
        "üìû <b>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ë–ï–õ–¢–ï–•–û–°–ú–û–¢–†</b>\n\n"
        "üìç <b>–ê–¥—Ä–µ—Å:</b> –≥. –ú–∏–Ω—Å–∫, —É–ª. –ü–ª–∞—Ç–æ–Ω–æ–≤–∞, 22–∞\n"
        "üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +375 (17) 311-09-80\n"
        "‚úâÔ∏è <b>Email:</b> info@gto.by\n"
        "üåê –ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç –∏–ª–∏ –Ω–∞–π–¥–∏—Ç–µ –Ω–∞—Å –Ω–∞ –∫–∞—Ä—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ üëá"
    )
    buttons = telebot.types.InlineKeyboardMarkup(row_width=2)
    buttons.add(
        telebot.types.InlineKeyboardButton("üåê –°–∞–π—Ç", url="https://gto.by/"),
        telebot.types.InlineKeyboardButton("üìç –ö–∞—Ä—Ç–∞", url="https://yandex.by/maps/-/CDuX9f~Y")
    )
    bot.send_message(
        msg.chat.id,
        text,
        parse_mode="HTML",
        reply_markup=buttons,
        disable_web_page_preview=True
    )


# –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫
@bot.message_handler(func=lambda msg: msg.text == "ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò")
def start_ai_mode(message):
    db_handler.add_active_user(message.chat.id)
    user_states[message.chat.id] = {'ai_mode': True}
    bot.send_message(
        message.chat.id,
        "–Ø –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? "
        "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'.",
        reply_markup=ai_mode_menu
    )


@bot.message_handler(func=lambda msg: user_states.get(msg.chat.id, {}).get('ai_mode') == True)
def handle_ai_mode_messages(message):
    db_handler.add_active_user(message.chat.id)
    chat_id = message.chat.id
    if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        if chat_id in user_states:
            user_states[chat_id]['ai_mode'] = False
        return_to_main(message)
        return
    lower_text = message.text.lower()
    if any(phrase in lower_text for phrase in
           ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é", "–º–µ—Ä—Å–∏", "thanks", "–≤—Å—ë", "–≤—Å–µ", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "–ø–æ–∫–∞"]):
        return
    bot.send_chat_action(chat_id, 'typing')
    ai_response = get_ai_response(message.text)
    if ai_response and ai_response.strip():
        bot.send_message(chat_id, ai_response, reply_markup=ai_mode_menu)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda msg: True)
def unknown_message(msg):
    db_handler.add_active_user(msg.chat.id)
    bot.send_message(msg.chat.id, "‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.", reply_markup=main_menu)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–ø–ª–∞—Ç—ã
@bot.callback_query_handler(func=lambda call: call.data == "pay")
def process_payment(call):
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id,
                     "üîó –í—ã –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é.",
                     reply_markup=main_menu)


if __name__ == '__main__':
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    db_handler.create_tables()
    bot.polling(none_stop=True, skip_pending=True)